---
- name: Install/Configure nginx and certbot
  become: true
  block:
    - name: Install cron and update cache
      ansible.builtin.apt:
        pkg:
          - cron
        state: present
        update_cache: true
    - name: Install certbot role with auto renewal
      ansible.builtin.import_role:
        name: geerlingguy.certbot
    - name: Install nginx role
      ansible.builtin.import_role:
        name: nginxinc.nginx
      vars:
        nginx_modules:
          - geoip
          - njs
        nginx_logrotate_conf_enabled: true
        nginx_logrotate_conf:
          paths: /var/log/nginx/*.log
          options:
            - daily
            - missingok
            - rotate 14
            - compress
            - delaycompress
            - notifempty
            - sharedscripts
    - name: Configure nginx role
      ansible.builtin.import_role:
        name: nginxinc.nginx_config
      vars:
        nginx_config_debug_output: true
        nginx_config_selinux: false
        nginx_config_main_template_enable: true
        nginx_config_main_template:
          template_file: nginx.conf.j2
          deployment_location: /etc/nginx/nginx.conf
          backup: true
          config:
            main:
              load_module:
                - modules/ngx_http_js_module.so
              user:
                username: nginx
                group: nginx
              pid: /var/run/nginx.pid
              daemon: true
            http:
              include:
                - /etc/nginx/conf.d/*.conf
        nginx_config_http_template_enable: true
        nginx_config_http_template:
          - backup: true
            config:
              upstreams: "{{ nginx_upstreams }}"
              core:
                error_page:
                  - code:
                      - 404
                    response: 404
              ssl:
                certificate: /etc/ssl/certs/ssl-cert-snakeoil.pem
                certificate_key: /etc/ssl/private/ssl-cert-snakeoil.key
                # certificate: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
                # certificate_key: "/etc/letsencrypt/live/{{ domain_name }}/privkey.pem"
                ciphers:
                  - HIGH
                  - "!aNull"
                  - "!MD5"
                conf_command: Protocol TLSv1.2
                prefer_server_ciphers: false
                protocols:
                  - TLSv1.2
                  - TLSv1.3
              proxy:
                set_header:
                  - field: X-Forwarded-For
                    value: $proxy_add_x_forwarded_for
                  - field: X-Forwarded-Proto
                    value: $scheme
                  - field: X-Fowarded-Host
                    value: $host
                  - field: Host
                    value: $http_host
                  - field: User-Agent
                    value: $http_user_agent
                  - field: X-Real-IP
                    value: $remote_addr
                  # - field: Access-Control-Allow-Origin
                  #   value: '*'
                  # - field: Access-Control-Allow-Credentials
                  #   value: true
                  # - field: Access-Control-Allow-Headers
                  #   value: Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,
                  # X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range
                  # - field: Access-Control-Allow-Methods
                  #   value: GET,POST,OPTIONS,PUT,DELETE,PATCH
                buffering: false
              # headers:
              #   add_headers:
              #     - name: Strict-Transport-Security
              #       value: '"max-age=15768000; includeSubDomains"'
              #       always: true
              #   add_trailers:
              #     name: Strict-Transport-Security
              #     value: '"max-age=15768000; includeSubDomains"'
              #     always: false
              #   expires:
              #     modified: true
              #     time: 12h
              log:
                access:
                  - path: /var/log/nginx/access.log
                    format: main
                    buffer: 1m
                    gzip: 5
                    flush: 10h
                    if: $status
                format:
                  - name: main
                    format: |
                      '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                error_log:
                  file: /var/log/nginx/error.log
                  level: notice
                open_log_file_cache:
                  max: 1000
                  inactive: 20s
                  min_uses: 2
                  valid: 1m
              servers:
                - core:
                    listen:
                      - address: "0.0.0.0"
                        port: 80
                        default_server: true
                        ssl: false
                      - address: "[::]"
                        port: 80
                        default_server: true
                        ssl: false
                    server_name: "{{ domain_name }}"
                  http2:
                    enable: false
                  rewrite:
                    return:
                      code: 301
                      url: "https://$host$request_uri"
                - core:
                    listen:
                      - address: "0.0.0.0"
                        port: 443
                        default_server: true
                        ssl: true
                        reuseport: true
                        so_keepalive: true
                      - address: "[::]"
                        port: 443
                        default_server: true
                        ssl: true
                        reuseport: true
                        so_keepalive: true
                    server_name: "{{ domain_name }}"
                  locations: "{{ nginx_main_locations }}"
                  # sub_filter:
                  #   sub_filters:
                  #     - string: server_hostname
                  #       replacement: $hostname
                  #     - string: server_address
                  #       replacement: $server_addr:$server_port
                  #     - string: server_url
                  #       replacement: $request_uri
                  #     - string: remote_addr
                  #       replacement: $remote_addr:$remote_port
                  #     - string: server_date
                  #       replacement: $time_local
                  #     - string: client_browser
                  #       replacement: $http_user_agent
                  #     - string: document_root
                  #       replacement: $document_root
                  #     - string: proxied_for_ip
                  #       replacement: $http_x_forwarded_for
                  #   last_modified: false
                  #   once: false
    - name: Ensure http2 is enabled
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/default.conf
        insertafter: "server_name {{ domain_name }};"
        line: "    http2 on;"
    - name: Reload nginx
      ansible.builtin.systemd_service:
        name: nginx
        state: reloaded
